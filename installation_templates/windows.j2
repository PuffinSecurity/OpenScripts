# Set-ExecutionPolicy Unrestricted
# Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass
# iex ((iwr -Uri "https://download.mdr.puffinsecurity.com/download/windows/<DOWNLOAD_TOKEN>").Content)
# Invoke-RestMethod -Uri "https://download.mdr.puffinsecurity.com/download/windows/<DOWNLOAD_TOKEN>" | Invoke-Expression


<#
.SYNOPSIS
    PuffinSecurity Agent Installer.
.DESCRIPTION
    This script installs all of the required tooling for our SIEM offering. For details please check the website or contact us.
.PARAMETER DeviceName
Specifies the name we will register your device under.
If not specified, it will default to a mix of the OS and Hostname.
.PARAMETER Groups
Specifies any groups you want to add this device to (Maximum 5)
If not specified, we will use the 'default' group.
#>
param (
    [String] $DeviceName = "$([System.Environment]::OSVersion.Platform)-$([System.Environment]::MachineName)"
    [String[]] $Groups = @("default")
)
    
$ErrorActionPreference = "Stop"

$PROGRAM_FILES =            (${env:ProgramFiles(x86)}, ${env:ProgramFiles} -ne $null)[0]
    
$PUFFIN_REGISTER_GROUPS =      $Groups | ForEach-Object { "group=$_" } | Join-String "&"
$PUFFIN_REGISTER_URL =      "{{ REGISTER_URL }}?name=$DeviceName&$PUFFIN_REGISTER_GROUPS"

$WAZUH_PATH =               "$PROGRAM_FILES\ossec-agent"
$WAZUH_AGENT_DOWNLOAD_URL = "https://packages.wazuh.com/4.x/windows/wazuh-agent-4.7.0-1.msi"
$WAZUH_INSTALLER_FILENAME = "wazuh-agent-installer.msi"
$WAZUH_AGENT_KEY_PATH =     "$WAZUH_PATH\client.keys"
$WAZUH_MANAGE_AGENT_EXE =   "$WAZUH_PATH\manage_agents.exe"
$WAZUH_AGENT_CONFIG_PATH =  "$WAZUH_PATH\internal_options.conf"

$SYSMON_DOWNLOAD_URL =      "https://download.sysinternals.com/files/Sysmon.zip"
$SYSMON_PATH =              "$env:TEMP\Sysmon.zip"

$CHAINSAW_PATH =            "$PROGRAM_FILES\ossec-agent\puffinsecurity\"
$CHAINSAW_DOWNLOAD_URL =    "https://github.com/WithSecureLabs/chainsaw/releases/download/v2.8.1/chainsaw_x86_64-pc-windows-msvc.zip"
$CHAINSAW_ZIP_PATH =        Join-Path -Path $env:TEMP -ChildPath "chainsaw.zip"


########
# Download and install the agent if not already installed
if (!(Get-Service wazuh-agent -ErrorAction SilentlyContinue)) {
    Invoke-WebRequest -Uri $WAZUH_AGENT_DOWNLOAD_URL -OutFile $WAZUH_INSTALLER_FILENAME | Wait-Process
    
    msiexec.exe /I $WAZUH_INSTALLER_FILENAME WAZUH_MANAGER='{{ WAZUH_MANAGER_URL }}' WAZUH_MANAGER_PORT='{{ WAZUH_MANAGER_PORT }}' /quiet | Wait-Process
} 

########
# Register the agent
# If no keys found from a previous install, register agent
if (!(Test-Path $AGENT_KEY_PATH)) {
    $key = Invoke-WebRequest -Uri $PUFFIN_REGISTER_URL -UseBasicParsing | Select-Object -ExpandProperty Content

    if ([string]::IsNullOrWhiteSpace($key) -or ![System.Convert]::FromBase64String($key)) {
        Write-Error "Failed to retrieve or decode the agent key"
        exit
    }

    # Install the agent key
    Write-Output "y" | & $WAZUH_MANAGE_AGENT_EXE -i $key
}


########
# Configure the agent
# Allow for remote commands
$FileOriginal = Get-Content $WAZUH_AGENT_CONFIG_PATH
$Pattern = "wazuh_command.remote_commands"

[String[]] $FileModified = @()
foreach ($Line in $FileOriginal)
{
    if ($Line -match $Pattern)
    {
        $FileModified += "wazuh_command.remote_commands=1"
    }
    else
    {
        $FileModified += $Line
    }
}

Set-Content $fileName $FileModified

########
# Restart the agent
Restart-Service -Name wazuh -Force


########
# Install VC_redist for the required arch
if ([System.Environment]::Is64BitProcess) {
    $url = "https://aka.ms/vs/17/release/VC_redist.x64.exe"
    $fileName = "VC_redist.x64.exe"
} else {
    $url = "https://aka.ms/vs/17/release/VC_redist.x86.exe"
    $fileName = "VC_redist.x86.exe"
}

$downloadPath = Join-Path -Path $env:TEMP -ChildPath $fileName
Invoke-WebRequest -Uri $url -OutFile $downloadPath
Start-Process -FilePath $downloadPath /install /quiet /norestart $arguments -Wait -NoNewWindow
Remove-Item -Path $downloadPath

########
# Install and configure Sysmon
Invoke-WebRequest -Uri $SYSMON_DOWNLOAD_URL -OutFile $SYSMON_PATH
Expand-Archive  -Force -Path $SYSMON_PATH -DestinationPath $env:TEMP -Force
if ([System.Environment]::Is64BitOperatingSystem) {
    Start-Process "$env:TEMP\Sysmon64.exe" -ArgumentList "-i -accepteula" -Wait -NoNewWindow
} else {
    Start-Process "$env:TEMP\Sysmon.exe" -ArgumentList "-i -accepteula" -Wait -NoNewWindow
}
Remove-Item $SYSMON_PATH
# TODO Configure Sysmon


########
# Install and configure Chainsaw
if (-not (Test-Path $CHAINSAW_PATH)) {
    New-Item -Path $CHAINSAW_PATH -ItemType Directory
}
Invoke-WebRequest -Uri $CHAINSAW_DOWNLOAD_URL -OutFile $CHAINSAW_ZIP_PATH
Expand-Archive -Path $CHAINSAW_ZIP_PATH -DestinationPath $CHAINSAW_PATH -Force
Remove-Item $CHAINSAW_ZIP_PATH


# Add exclusion for rules
Add-MpPreference -ExclusionPath $CHAINSAW_PATH

# Set error preference
#TODO DOWNLOAD FROM GIT
 | Out-File -FilePath "$WAZUH_PATH\active-response\bin\chainsaw.ps1"
